<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Plugins on Headlamp</title>
    <link>https://lijianzhi01.github.io/headlamp/docs/latest/development/plugins/</link>
    <description>Recent content in Plugins on Headlamp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright the Headlamp project contributors</copyright><atom:link href="https://lijianzhi01.github.io/headlamp/docs/latest/development/plugins/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building and Shipping Plugins</title>
      <link>https://lijianzhi01.github.io/headlamp/docs/latest/development/plugins/building/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lijianzhi01.github.io/headlamp/docs/latest/development/plugins/building/</guid>
      <description>This section explains how to start developing a Headlamp plugin, and how to ship it once finished.
Creating a new plugin This is how to start a new plugin:
npx --yes @kinvolk/headlamp-plugin create headlamp-myfancy cd headlamp-myfancy npm run start There&amp;rsquo;s some basic code inside src/index.tsx.
Now run Headlamp (the desktop app or the development version ), and your plugin should be loaded.
Using the above commands means that Headlamp will automatically reload whenever to make a change to the plugin.</description>
    </item>
    
    <item>
      <title>Plugins Functionality</title>
      <link>https://lijianzhi01.github.io/headlamp/docs/latest/development/plugins/functionality/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lijianzhi01.github.io/headlamp/docs/latest/development/plugins/functionality/</guid>
      <description>Headlamp&amp;rsquo;s plugins exist for changing or adding functionality related to the user interface and experience.
Plugins Lib The @kinvolk/headlamp-plugin module ships a library (@kinvolk/headlamp-plugin/lib) where all the Headlamp-related development modules can be found.
The main ones are:
 K8s: Kubernetes related functionality Headlamp: To register plugins CommonComponents: React components commonly used in the Headlamp UI Notification: This module contains two exported members one is Notification, a class which can be used to prepare notifications that are accepted by headlamp and the other one is setNotificationsInStore it is a dispatcher function which accepts a notification object prepared from the Notification class and when called it brings the notifications from plugin land to headlamp ecosystem so that headlamp can parse the notification and display it.</description>
    </item>
    
    <item>
      <title>How to create a Plugin</title>
      <link>https://lijianzhi01.github.io/headlamp/docs/latest/development/plugins/how-to/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lijianzhi01.github.io/headlamp/docs/latest/development/plugins/how-to/</guid>
      <description>This section will walk you through a basic plugin development.
Types If you are using Typescript for developing the plugin, the @kinvolk/headlamp-plugin package does ship some type declarations in @kinvolk/headlamp-plugin/types. Please notice that the whole external plugin mechanics are still in an early development phase and thus only the actual type declarations (and not the corresponding code) is shipped in this package at the moment.
Hello Kubernetes The following example will show a basic plugin declaration and registration in a file that should match the src/index.</description>
    </item>
    
  </channel>
</rss>
